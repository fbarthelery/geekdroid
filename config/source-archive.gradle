/*
 * Geekdroid is a utility library for development on the Android
 * Platform.
 *
 * Copyright (C) 2017-2025 by Frederic-Charles Barthelery.
 *
 * This file is part of Geekdroid.
 *
 * Geekdroid is free software: you can redistribute it and/or modify
 * it under the terms of the GNU General Public License as published by
 * the Free Software Foundation, either version 3 of the License, or
 * (at your option) any later version.
 *
 * Geekdroid is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 * GNU General Public License for more details.
 *
 * You should have received a copy of the GNU General Public License
 * along with Geekdroid.  If not, see <http://www.gnu.org/licenses/>.
 */
task sourceArchive {
    description "Get the source archive of the project"
}

sourceArchive.doLast {
    makeSourceArchive(rootProject.name)
}

project.build.dependsOn sourceArchive

def makeSourceArchive(String projectName) {
    def git = new File(".git")
    def hg = new File(".hg")
    def tag
    if (git.exists()) {
        tag = getGitSha1()
        println("Building source archive \"${projectName}-src-${tag}.zip\" from git")
        exec {
            workingDir project.rootDir
            commandLine "git", "archive", "--format=zip", "--prefix=${projectName}-src-${tag}/", "-o", "${projectName}-src-${tag}.zip", "HEAD"
        }
    } else if (hg.exists()) {
        tag = getHgSha1()
        println("Building source archive \"${projectName}-src-${tag}.zip\" from hg")
        exec {
            workingDir project.rootDir
            commandLine "hg", "archive", "-t", "zip", "-r", tag, "${projectName}-src-${tag}.zip"
        }
    }
}

def getGitSha1() {
    return 'git rev-parse HEAD'.execute().text.trim()
}

def getHgSha1() {
    return 'hg id --debug -i -r .'.execute().text.trim()
}
